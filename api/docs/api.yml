swagger: '2.0'
info:
  description: >
    Scoreboard API powers the Scoreboard. It provides the OSM users data to the Scoreboard and allow grouping and searching of users and campaigns. It also provides insight into OSM top stats.
  version: '0.1.0'
  title: Scoreboard API
consumes:
  - application/json
produces:
  - application/json
tags:
  - name: users
    description: Users
  - name: campaigns
    description: Campaigns
  - name: stats
    description: Top Stats
paths:
  /api/users:
    get:
      summary: list of users
      tags:
        - users
      responses:
        200:
          description: User object
  /api/users/stats:
    get:
      summary: list of OSM users and their stats
      tags:
        - users
      parameters:
      - in: query
        name: page
        type: integer
        description: The pagination parameter (each page is limit to 25 results)
        required: false
      - in: query
        name: search
        type: string
        description: Is used for searching the users display name
        required: false
      - in: query
        name: country
        type: string
        # TODO: make this consistent with 3 letter country code used in Osmesa in the /api/timeseries endpoint
        description: 'List of countries to filter on, using a 2 letter country code. Example "CA,US" for Canada, United States'
        required: false
      - in: query
        name: sortType
        type: string
        enum: [Least recent, Most recent, Most total, Least total]
        description: Sort users by a given type
        required: false
      - in: query
        name: active
        type: boolean
        description: Indicator for whether to include only users who have been active in the last 6 months
        required: false
        default: false
      responses:
        200:
          description: The list of OSM users
  "/api/users/{id}":
    get:
      summary: a specific user
      tags:
        - users
      parameters:
        - name: id
          in: path
          description: User's OSM ID
          type: integer
          required: true
      responses:
        200:
          description: The OSM user object
  /api/campaigns:
    get:
      tags:
        - campaigns
      summary: list of campaigns
      parameters:
      - in: query
        name: page
        type: integer
        description: The pagination parameter (each page is limit to 25 results)
        required: false
      - in: query
        name: search
        type: string
        description: Search for campaign names
        required: false
      - in: query
        name: compl_min
        type: integer
        description: Minimum percentage of completion
        required: false
        default: 0
      - in: query
        name: compl_max
        type: integer
        description: Maximum percentage of completion
        required: false
        default: 100
      responses:
        200:
          description: List of campaigns
  "/api/campaigns/{id}":
    get:
      tags:
        - campaigns
      summary: a specific campaign
      parameters:
      - name: id
        in: path
        description: The campaign ID
        type: integer
        required: true
      responses:
        200:
          description: The campaign object
  /api/topstats:
    get:
      tags:
        - stats
      summary: "Top level stats including: number of campaigns, campaigns sorted by priority, edits by country and number of active users"
      responses:
        200:
          description: Returns list of responses
  /api/timeseries:
    post:
      tags:
        - 'time series'
      summary: 'Fetches time-series data from the osmesa database.
       Note: all of the parameters below are properties of an application/json request payload (body).
       Note: at least one Filter is required, otherwise a 400 Bad Request is returned.'
      parameters:
        - name: startDate
          required: true
          description: 'Start date of query.'
          in: body
          schema:
            type: string
            description: 'ISO-8601 formatted datetime string (UTC time zone). https://en.wikipedia.org/wiki/ISO_8601'
            example: '2020-12-30'
        - name: endDate
          required: false
          description: 'End date of query (defaults to now if omitted).'
          in: body
          schema:
            type: string
            description: 'ISO-8601 formatted datetime string (UTC time zone). https://en.wikipedia.org/wiki/ISO_8601'
            example: '2020-12-30'
        - name: binInterval
          required: false
          description: 'Response will be binned into equal intervals specified by this parameter. Must be shorter
            than end-date minus start-date. If omitted, no binning will be performed.'
          in: body
          schema:
            type: string
            description: 'ISO-8601 formatted time interval/duration string. https://en.wikipedia.org/wiki/ISO_8601'
            example: 'P1Y2M10DT2H30M'
        - name: userIdsFilter
          required: false
          description: 'Filter down to these mapedit/osm user id(s).'
          in: body
          schema:
            type: array
            items:
              type: integer
        - name: categoriesFilter
          required: false
          description: 'Filter down to these osmesa categories of measurements and counts.
           Each count and measurement will have [add, modified, deleted] in the response. Measurements
           are in kilometers, or square kilometers, e.g. *_km and *_km2.
           Note: available categories sourced from
           https://github.com/azavea/osmesa/blob/master/src/analytics/src/main/scala/osmesa/analytics/stats/package.scala#L119-L180'
          in: body
          schema:
            type: array
            items:
              type: string
              enum:
                # measurements
                - 'road_km'
                - 'waterway_km'
                - 'coastline_km'
                - 'railline_km'
                - 'landuse_km2'
                - 'natural_km2'
                # counts
                - 'roads'
                - 'waterways'
                - 'coastlines'
                - 'buildings'
                - 'railway_features'
                - 'raillines'
                - 'pois'
                - 'landuse'
                - 'natural'
                - 'other'
        - name: countriesFilter
          required: false
          description: 'Filter down to these countries.'
          in: body
          schema:
            type: array
            items:
              type: string
              description: 'ISO-3166 country code (3 letters), or USA-XX for a US State'
            example: ['AFG', 'AUS', 'USA', 'USA-AK']
        - name: hashtagsFilter
          required: false
          description: 'Filter down to these exact changeset hashtag(s).'
          in: body
          schema:
            type: array
            items:
              type: string
            example: ['345_task_789', '345_task_111']
        - name: hashtagPrefixFilter
          required: false
          in: body
          schema:
            type: array
            items:
              type: string
              example: ['ocelots_']
          description: 'Filter down to these hashtag(s), using a prefix match.'
      responses:
        200:
          description: 'Time series data structure. TODO define schema of response data.'
          schema:
            type: object
